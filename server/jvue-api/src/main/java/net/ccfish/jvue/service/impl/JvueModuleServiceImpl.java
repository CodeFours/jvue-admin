package net.ccfish.jvue.service.impl;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import net.ccfish.common.enums.YesOrNoEnum;
import net.ccfish.common.jpa.JpaRestrictions;
import net.ccfish.common.jpa.SearchCriteria;
import net.ccfish.jvue.model.JvueMenu;
import net.ccfish.jvue.model.JvueModule;
import net.ccfish.jvue.repository.JvueMenuRepository;
import net.ccfish.jvue.repository.JvueModuleRepository;
import net.ccfish.jvue.service.JvueModuleService;

/**
 * Generated by Spring Data Generator on 31/01/2018
 */
@Service
@Transactional
public class JvueModuleServiceImpl
        implements JvueModuleService {

    private JvueModuleRepository jvueModuleRepository;
    
    @Autowired
    private JvueMenuRepository jvueMenuRepository;

    @Autowired
    public JvueModuleServiceImpl(JvueModuleRepository jvueModuleRepository) {
        this.jvueModuleRepository = jvueModuleRepository;
    }

    @Override
    public JpaRepository<JvueModule, Integer> jpaRepository() {
        return this.jvueModuleRepository;
    }
    
    @Override
    @CacheEvict(value = "JwtUserDetailsService", allEntries = true)
    public void delete(Integer id) {
        // 判断是否在其他表中使用，未使用时，可物理删除；如在menu等表里使用，逻辑删除
        SearchCriteria<JvueMenu> jvueMenuCriteria = new SearchCriteria<>();
        jvueMenuCriteria.add(JpaRestrictions.eq("moduleId", id, false));
        long mcount =jvueMenuRepository.count(jvueMenuCriteria);
        if (mcount > 0L) {
            //jpaRepository().delete(id);
            Optional<JvueModule> entityResult = jvueModuleRepository.findById(id);
            entityResult.ifPresent(entity -> {
                entity.setEnabled((byte)YesOrNoEnum.No.ordinal());
                jvueModuleRepository.save(entity);
            });
        } else {
            jvueModuleRepository.deleteById(id);
        }
    }

    @Override
    @CacheEvict(value = "JwtUserDetailsService", allEntries = true)
    public void update(Integer id, JvueModule data) {
        // throw new UnsupportedClassVersionError("不支持更新处理");
        Optional<JvueModule> entityResult = jvueModuleRepository.findById(id);
        entityResult.ifPresent(module -> {
            module.setName(data.getName());
            module.setEnabled(data.getEnabled());
            jvueModuleRepository.save(module);
        });
    }

}
